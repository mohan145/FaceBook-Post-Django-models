{
  "swagger": "2.0",
  "host": "127.0.0.1:8000",
  "basePath": "/api/",
  "info": {
    "version": "1.0.0",
    "title": "Simple API",
    "description": "A simple API to learn how to write OpenAPI Specification"
  },
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users",
        "superuser": "super user permission"
      },
      "type": "oauth2"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "username",
        "age"
      ]
    },
    "UserWithExtraFields": {
      "allOf": [
        {
          "$ref": "#/definitions/User"
        },
        {
          "type": "object",
          "properties": {
            "createdOn": {
              "type": "string",
              "format": "datetime"
            },
            "userId": {
              "type": "string"
            }
          },
          "required": [
            "createdOn",
            "userId"
          ]
        }
      ]
    }
  },
  "parameters": {
    "CreateNewPersonParameter": {
      "name": "person",
      "in": "body",
      "description": "The person to create.",
      "schema": {
        "$ref": "#/definitions/User"
      }
    }
  },
  "responses": {
    "CreateNewPersonResponse": {
      "description": "Success Response",
      "schema": {
        "$ref": "#/definitions/UserWithExtraFields"
      }
    }
  },
  "paths": {
    "/person/create/": {
      "post": {
        "operationId": "create_person",
        "summary": "Create New Person",
        "description": "Creates a new person and return the user object. This api is not idempotent.",
        "security": [
          {
            "oauth": [
              "superuser"
            ]
          }
        ],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "required": true,
            "description": "The Person to create.",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "age": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "username",
                "age"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success Response",
            "schema": {
              "type": "object",
              "properties": {
                "createdOn": {
                  "type": "string",
                  "format": "datetime"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "age": {
                  "type": "integer",
                  "format": "int64"
                },
                "userId": {
                  "type": "string"
                }
              },
              "required": [
                "createdOn",
                "firstName",
                "lastName",
                "username",
                "age",
                "userId"
              ]
            }
          }
        }
      }
    },


    "/persons/": {
      "get": {
        "operationId": "get_persons",
        "summary": "Get list of persons",
        "description": "Returns a list of persons",
        "security": [
          {
            "oauth": [
              "superuser"
            ]
          }
        ],

        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Some description for offset",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Some description for limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK status code",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserWithExtraFields"
              }
            }
          }
        }
      }
    },


    "/persons/{username}": {
      "get": {
        "operationId": "get_user",
        "summary": "Get User object",
        "description": "Returns a User object with given username",
        "security": [
          {
            "oauth": [
              "superuser"
            ]
          }
        ],

        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required":true,
            "description": "username of the user",
            "type": "string"
          }

        ],
        "responses": {
          "200": {
            "description": "OK status code",
            "schema": {
              "type": "object",

                "$ref": "#/definitions/User"

            }
          }
        }
      }
    }








  }
}